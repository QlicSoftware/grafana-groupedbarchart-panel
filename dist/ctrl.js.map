{"version":3,"sources":["../src/ctrl.js"],"names":["MetricsPanelCtrl","_","kbn","TimeSeries","d3","panelDefaults","legend","show","position","chartType","labelOrientation","orientation","avgLineShow","barValuesShow","labelSpace","links","datasource","maxDataPoints","interval","targets","cacheTimeout","nullPointMode","aliasColors","format","valueName","strokeWidth","fontSize","fontColor","width","height","colorSet","colorSch","GroupedBarChartCtrl","$scope","$injector","$rootScope","hiddenSeries","data","defaults","panel","events","on","onInitEditMode","bind","onDataReceived","onDataError","console","log","addEditorTab","subItem","value","render","forEach","push","d","color","dataList","length","o","groupBy","rows","e","forOwn","i","t","sta","sum","tid","map","s","reduce","x","y","res","label","decimalInfo","getDecimalsForValue","formatFunc","valueFormats","decimals","scaledDecimals","scope","elem","attrs","ctrl","groupedBarChart","opts","margin","parseInt","showLegend","legendType","axesConfig","element","find","options","concat","keys","uniq","filter","key","avgList","stackVal","valores","k","name","scale","ordinal","range","category20","draw","select","html","svg","append","attr","style","top","createScales","addAxes","addTooltips","addBar","addLegend","y0","rangeRoundBands","y1","linear","x0","x1","axesScale","xAxis","axis","tickSize","orient","yAxis","domain","rangeBand","chartScale","domainCal","max","xAxisConfig","left","call","selectAll","yAxisConfig","bar","enter","barC","text","tips","elements","elementData","__data__","display","loc","defaultOptions","slice","reverse","onRender","Chart","bottom","right","templateUrl"],"mappings":"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","file":"ctrl.js","sourcesContent":["import {MetricsPanelCtrl} from 'app/plugins/sdk';\nimport _ from 'lodash';\nimport kbn from 'app/core/utils/kbn';\nimport TimeSeries from 'app/core/time_series';\nimport * as d3 from './external/d3.v3.min';\nimport './css/groupedBarChart.css!';\n\nconst panelDefaults = {\n    legend: {\n        show: true,\n        position: 'On graph',\n    },\n    chartType: 'stacked bar chart',\n    labelOrientation: 'horizontal',\n    orientation: 'vertical',\n    avgLineShow: true,\n    barValuesShow: true,\n    labelSpace: 40,\n    links: [],\n    datasource: null,\n    maxDataPoints: 3,\n    interval: null,\n    targets: [{}],\n    cacheTimeout: null,\n    nullPointMode: 'connected',\n    aliasColors: {},\n    format: 'short',\n    valueName: 'current',\n    strokeWidth: 1,\n    fontSize: '80%',\n    fontColor: '#fff',\n    width: 800,\n    height: 400,\n    colorSet: [],\n    colorSch: []\n};\n\nexport class GroupedBarChartCtrl extends MetricsPanelCtrl {\n\n    constructor($scope, $injector, $rootScope) {\n        super($scope, $injector);\n        this.$rootScope = $rootScope;\n        this.hiddenSeries = {};\n        this.data = null;\n\n        _.defaults(this.panel, panelDefaults);\n\n        this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n        this.events.on('data-received', this.onDataReceived.bind(this));\n        this.events.on('data-snapshot-load', this.onDataReceived.bind(this));\n        this.events.on('data-error', this.onDataError.bind(this));\n        this.events.on('span-changed', console.log)\n    }\n\n    onInitEditMode() {\n        this.addEditorTab('Options', 'public/plugins/grafana-groupedbarchart-panel/partials/editor.html', 2);\n        this.addEditorTab('Colors', 'public/plugins/grafana-groupedbarchart-panel/partials/colors.html', 3);\n    }\n\n    setUnitFormat(subItem) {\n        this.panel.format = subItem.value;\n        this.render();\n    }\n\n    onDataError() {\n        this.render();\n    }\n\n    updateColorSet() {\n        this.panel.colorSch = [];\n        this.panel.colorSet.forEach(d => this.panel.colorSch.push(d.color));\n        this.render();\n    }\n\n    onDataReceived(dataList) {\n        if (dataList && dataList.length) {\n            let o = _.groupBy(dataList[0].rows, e => e[0]);\n            _.forOwn(o, (e, i) => {\n                let t = _.groupBy(e, sta => sta[1]);\n                o[i] = _.forOwn(t, (sum, tid) => {t[tid] = sum.map(s => s[2]).reduce((x,y) => x+y)})\n            });\n\n            let res = [];\n            _.forOwn(o, (e, i) => {\n                e.label = i;\n                res.push(e);\n            });\n            this.data = res;//.sort((a, b) => {return (a.label>b.label)?-1:((b.label>a.label)?1:0)});\n        } else {\n            this.data = [\n                {label:\"Machine001\", \"Off\":15, \"Down\":50, \"Run\": 0, \"Idle\":40},\n                {label:\"Machine002\", \"Off\":15, \"Down\":5, \"Run\":40, \"Idle\":15},\n                {label:\"Machine003\", \"Off\":15, \"Down\":30, \"Run\":40, \"Idle\":15},\n                {label:\"Machine004\", \"Off\":15, \"Down\":30, \"Run\":80, \"Idle\":15}\n            ];\n        }\n\n        this.render();\n    }\n\n    formatValue(value) {\n        let decimalInfo = this.getDecimalsForValue(value);\n        let formatFunc = kbn.valueFormats[this.panel.format];\n        if (formatFunc) {\n            return formatFunc(value, decimalInfo.decimals, decimalInfo.scaledDecimals);\n        }\n        return value;\n    }\n\n    link(scope, elem, attrs, ctrl) {\n        class groupedBarChart {\n            constructor(opts) {\n                this.data = opts.data;\n                this.margin = opts.margin;\n                this.width = parseInt(opts.width, 10);\n                this.height = parseInt(opts.height, 10);\n                this.showLegend = opts.legend;\n                this.legendType = opts.position;\n                this.chartType = opts.chartType;\n                this.orientation = opts.orientation;\n                this.labelSpace = opts.labelSpace;\n                this.fontColor = opts.fontColor;\n                this.labelOrientation = opts.labelOrientation;\n                this.avgLineShow = opts.avgLineShow;\n                this.barValuesShow = opts.barValuesShow;\n                this.axesConfig = [];\n                this.element = elem.find(opts.element)[0];\n                this.options = [];\n                this.data.forEach(d => {\n                    this.options = this.options.concat(d3.keys(d));\n                });\n                this.options = _.uniq(this.options.filter(key => key !== 'label'));\n                this.avgList = {};\n                this.options.forEach(d => {this.avgList[d] = 0});\n                this.options = this.options.filter(d => d!=='valores');\n                this.data.forEach(d => {\n                    let stackVal = 0;\n                    d.valores = this.options.filter(k => k in d).map((name, i, o) => {\n                        if (i !== 0) stackVal = stackVal + (+d[o[i-1]]);\n                        this.avgList[name] = this.avgList[name] + d[name];\n                        return {name: name, value: +d[name], stackVal: stackVal};\n                    });\n                });\n                this.options.forEach(d => {\n                    this.avgList[d] /= this.data.length;\n                });\n                if (opts.color.length == 0) {\n                    this.color = d3.scale.ordinal()\n                        .range(d3.scale.category20().range());\n                } else {\n                    this.color = d3.scale.ordinal()\n                        .range(opts.color);\n                }\n\n                this.draw();\n            }\n\n            draw() {\n                d3.select(this.element).html(\"\");\n                this.svg = d3.select(this.element).append('svg');\n                this.svg.attr('width', this.width)\n                    .attr('height', this.height)\n                    // .attr('viewBox', `0, 0, ${this.width}, ${this.height}`)\n                    .attr('preserveAspectRatio', 'xMinYMin meet')\n                    .style('padding', '10px')\n                    .attr('transform', `translate(0, ${this.margin.top})`);\n\n                this.createScales();\n                this.addAxes();\n                this.addTooltips();\n                this.addBar();\n                d3.select(this.element).attr('style', `width: ${this.width*1.5}px; height: ${this.height*1.5}px`);\n                if (this.showLegend) this.addLegend(this.legendType);\n            }\n\n            createScales() {\n                switch(this.orientation) {\n                    case 'horizontal':\n                        this.y0 = d3.scale.ordinal()\n                            .rangeRoundBands([+this.height, 0], .2, 0.5);\n\n                        this.y1 = d3.scale.ordinal();\n\n                        this.x = d3.scale.linear()\n                            .range([0, +this.width]);\n                        this.axesConfig = [this.x, this.y0, this.y0, this.y1, this.x];\n                        break;\n                    case 'vertical':\n                        this.x0 = d3.scale.ordinal()\n                            .rangeRoundBands([0, +this.width], .2, 0.5);\n\n                        this.x1 = d3.scale.ordinal();\n\n                        this.y = d3.scale.linear()\n                            .range([0, +this.height]);\n\n                        this.axesConfig = [this.x0, this.y, this.x0, this.x1, this.y];\n                        break;\n                }\n\n            }\n\n            addAxes() {\n                let axesScale = 1.1;\n                this.xAxis = d3.svg.axis()\n                    .scale(this.axesConfig[0])\n                    .tickSize(-this.height)\n                    .orient('bottom');\n\n                this.yAxis = d3.svg.axis()\n                    .scale(this.axesConfig[1])\n                    .orient('left');\n\n                this.axesConfig[2].domain(this.data.map(d => { return d.label; }));\n                this.axesConfig[3].domain(this.options).rangeRoundBands([0, this.axesConfig[2].rangeBand()]);\n\n                let chartScale = (this.chartType === 'bar chart') ? 0 : 1;\n                let domainCal = (this.orientation === 'horizontal')\n                    ? [0, d3.max(this.data, function(d) { return d3.max(d.valores, d => { return (d.value + chartScale*d.stackVal)*axesScale; }); })]\n                    : [d3.max(this.data, function(d) { return d3.max(d.valores, d => { return (d.value + chartScale*d.stackVal)*axesScale; }); }), 0];\n                this.axesConfig[4].domain(domainCal);\n\n                let xAxisConfig = this.svg.append('g')\n                    .attr('class', 'x axis')\n                    .attr('transform', `translate(${this.margin.left}, ${this.height + this.margin.top})`)\n                    .call(this.xAxis)\n                    .selectAll('text')\n                    .style('fill', `${this.fontColor}`)\n\n                switch(this.labelOrientation) {\n                    case 'horizontal':\n                        break;\n                    case '45 degrees':\n                        xAxisConfig.style('text-anchor', 'end')\n                            .style('transform', 'rotate(-45deg)');\n                        break;\n                    case 'vertical':\n                        xAxisConfig.style('text-anchor', 'end')\n                            .style('transform', 'rotate(-90deg)');\n                        break;\n                }\n\n                let yAxisConfig = this.svg.append('g')\n                    .attr('class', 'y axis')\n                    .attr('transform', `translate(${this.margin.left}, ${this.margin.top})`)\n                    .style('fill', `${this.fontColor}`)\n                    .call(this.yAxis)\n\n                yAxisConfig.selectAll('text')\n                    .style('fill', `${this.fontColor}`);\n                yAxisConfig.selectAll('path')\n                    .style('stroke', `${this.fontColor}`);\n\n            }\n\n            addBar() {\n                let scale = (this.chartType === 'bar chart') ? 1 : this.options.length;\n                switch(this.orientation) {\n                    case 'horizontal':\n                        this.avgLineShow && this.options.forEach(d => {\n                            this.svg.append('line')\n                                .attr('x1', this.x(this.avgList[d]))\n                                .attr('y1', this.height)\n                                .attr('x2', this.x(this.avgList[d]))\n                                .attr('y2', 0)\n                                .attr('class', `${d} avgLine`)\n                                .attr('transform', `translate(${this.margin.left}, ${this.margin.top})`)\n                                .style('display', 'none')\n                                .style('stroke-width', 2)\n                                .style('stroke', this.color(d))\n                                .style('stroke-opacity', 0.7);\n                        });\n\n                        this.bar = this.svg.selectAll('.bar')\n                            .data(this.data)\n                            .enter().append('g')\n                            .attr('class', 'rect')\n                            .attr('transform', d => {\n                                return `translate(${this.margin.left}, ${this.y0(d.label) + this.margin.top})`;\n                            });\n\n                        this.barC = this.bar.selectAll('rect')\n                            .data(d => { return d.valores; })\n                            .enter();\n\n\n                        this.barC.append('rect')\n                            .attr('height', this.y1.rangeBand()*scale)\n                            .attr('y', d => {\n                                return (this.chartType === 'bar chart') ? this.y1(d.name) : this.y0(d.label);\n                            })\n                            .attr('x', d => {\n                                return (this.chartType === 'bar chart') ? 0 : this.x(d.stackVal);\n                            })\n                            .attr('value', d => { return d.name;})\n                            .attr('width', (d) => { return this.x(d.value);})\n                            .style('fill', d => { return this.color(d.name);});\n\n                        break;\n                    case 'vertical':\n                        this.avgLineShow && this.options.forEach(d => {\n                            this.svg.append('line')\n                                .attr('x1', 0)\n                                .attr('y1', this.y(this.avgList[d]))\n                                .attr('x2', +this.width)\n                                .attr('y2', this.y(this.avgList[d]))\n                                .attr('class', `${d} avgLine`)\n                                .attr('transform', `translate(${this.margin.left}, ${this.margin.top})`)\n                                .style('display', 'none')\n                                .style('stroke-width', 2)\n                                .style('stroke', this.color(d))\n                                .style('stroke-opacity', 0.7)\n                        });\n\n                        this.bar = this.svg.selectAll('.bar')\n                            .data(this.data)\n                            .enter().append('g')\n                            .attr('class', 'rect')\n                            .attr('transform', (d, i) => {\n                                return `translate(${this.x0(d.label)}, ${+this.height + this.margin.top})`;\n                            });\n\n                        this.barC = this.bar.selectAll('rect')\n                            .data(d => { return d.valores.map(e => { e.label = d.label; return e;}); })\n                            .enter();\n\n                        this.barC.append('rect')\n                            .attr('id', (d, i) => { return `${d.label}_${i}`;})\n                            .attr('height', d => { return +this.height - this.y(d.value);})\n                            .attr('y', d => {\n                                return (this.chartType === 'bar chart') ? this.y(d.value) - this.height :  (this.y(d.value) - 2*(+this.height) + this.y(d.stackVal));\n                            })\n                            .attr('x', (d, i) => {\n                                return (this.chartType === 'bar chart') ? this.x1(d.name) + this.margin.left : this.x1(d.name) - this.x1.rangeBand()*i + this.margin.left;\n                            })\n                            .attr('value', d => { return d.name;})\n                            .attr('width', this.x1.rangeBand()*scale)\n                            .style('fill', d => { return this.color(d.name);});\n\n                        break;\n                }\n\n                if(this.barValuesShow) {\n                    (this.chartType === 'bar chart') && this.barC.append('text')\n                        .attr('x', d => {\n                            return (this.orientation === 'horizontal')\n                            ? this.x(d.value) +5\n                            : this.x1(d.name) + this.x1.rangeBand()/4 + this.margin.left;\n                        })\n                        .attr('y', d => {\n                            return (this.orientation === 'horizontal')\n                            ? this.y1(d.name) +(this.y1.rangeBand()/2)\n                            : this.y(d.value) - this.height -8;\n                        })\n                        .attr('dy', '.35em')\n                        .style('fill', `${this.fontColor}`)\n                        .text(d => { return d.value ? d.value : ''; });\n                }\n\n                this.bar.on('mouseover', d => {\n                    this.tips.style('left', `${10}px`);\n                    this.tips.style('top', `${15}px`);\n                    this.tips.style('display', \"inline-block\");\n                    let elements = d3.selectAll(':hover')[0];\n                    let elementData = elements[elements.length-1].__data__;\n                    this.tips.html(`${d.label} , ${elementData.name} ,  ${elementData.value}`);\n                    if (this.avgLineShow) d3.selectAll(`.${elementData.name}`)[0][0].style.display = '';\n                });\n\n                this.bar.on('mouseout', d => {\n                    this.tips.style('display', \"none\");\n                    d3.selectAll('.avgLine')[0].forEach(d => {\n                       d.style.display = 'none';\n                    });\n                });\n            }\n\n            addLegend(loc) {\n                let labelSpace = this.labelSpace;\n                switch(loc) {\n                    case 'On graph':\n                        let defaultOptions = (this.chartType == 'bar chart' || this.orientation == 'horizontal') ? this.options.slice(): this.options.slice().reverse();\n                        this.legend = this.svg.selectAll('.legend')\n                            .data(defaultOptions)\n                            .enter().append('g')\n                            .attr('class', 'legend')\n                            .attr('transform', (d, i) => { return `translate(50,${i*20 + this.margin.top})`; });\n\n                        this.legend.append('rect')\n                            .attr('x', this.width*1.1 - 18)\n                            .attr('width', 18)\n                            .attr('height', 18)\n                            .style('fill', this.color);\n\n                        this.legend.append('text')\n                            .attr('x', this.width*1.1 - 24)\n                            .attr('y', 9)\n                            .attr('dy', '.35em')\n                            .style('text-anchor', 'end')\n                            .style('fill', `${this.fontColor}`)\n                            .text(d => { return d; });\n                        break;\n                    case 'Under graph':\n                        this.legend = this.svg.selectAll('.legend')\n                            .data(this.options.slice())\n                            .enter().append('g')\n                            .attr('class', 'legend')\n                            .attr('transform', (d, i) => { return `translate(${+i*labelSpace - this.width},${+this.height + 24 + this.margin.top})`; });\n\n                        this.legend.append('rect')\n                            .attr('x', (d, i) => { return (i*labelSpace + this.margin.left + this.width*1 +0);})\n                            .attr('width', 18)\n                            .attr('height', 18)\n                            .style('fill', this.color);\n\n                        this.legend.append('text')\n                            .attr('x', (d, i) => { return (i*labelSpace + this.margin.left + this.width*1) +5; })\n                            .attr('dx', 18)\n                            .attr('dy', '1.1em')\n                            .style('text-anchor', 'start')\n                            .style('fill', `${this.fontColor}`)\n                            .text(d => { return d; });\n                        break;\n                    default:\n                        break;\n                }\n            }\n\n            addTooltips() {\n                this.tips = d3.select(this.element).append('div')\n                    .attr('class', 'toolTip');\n            }\n        }\n\n        function onRender() {\n            if(!ctrl.data) return;\n            var Chart = new groupedBarChart({\n                data: ctrl.data,\n                margin: {top: 30, left: 80, bottom: 10, right: 10},\n                element: '#chart',\n                width: ctrl.panel.width,\n                height: ctrl.panel.height,\n                legend: ctrl.panel.legend.show,\n                fontColor: ctrl.panel.fontColor,\n                position: ctrl.panel.legend.position,\n                chartType: ctrl.panel.chartType,\n                orientation: ctrl.panel.orientation,\n                labelOrientation: ctrl.panel.labelOrientation,\n                labelSpace: ctrl.panel.labelSpace,\n                avgLineShow: ctrl.panel.avgLineShow,\n                barValuesShow: ctrl.panel.barValuesShow,\n                color: ctrl.panel.colorSch\n            });\n\n            ctrl.panel.colorSet = [];\n            Chart.options.forEach(d => {\n                ctrl.panel.colorSet.push({text: d, color: Chart.color(d)});\n            });\n        }\n\n        this.events.on('render', function() {\n            onRender();\n        });\n    }\n}\n\nGroupedBarChartCtrl.templateUrl = 'partials/module.html';\n"]}
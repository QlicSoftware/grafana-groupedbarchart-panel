{"version":3,"sources":["../src/ctrl.js"],"names":["MetricsPanelCtrl","_","kbn","TimeSeries","d3","panelDefaults","legend","show","position","chartType","labelOrientation","orientation","avgLineShow","barValuesShow","labelSpace","links","datasource","maxDataPoints","interval","targets","cacheTimeout","nullPointMode","aliasColors","format","valueName","strokeWidth","fontSize","fontColor","width","height","colorSet","colorSch","GroupedBarChartCtrl","constructor","$scope","$injector","$rootScope","hiddenSeries","data","defaults","panel","events","on","onInitEditMode","bind","onDataReceived","onDataError","console","log","addEditorTab","setUnitFormat","subItem","value","render","updateColorSet","forEach","push","d","color","dataList","length","columns","map","text","rows","row","reduce","accumulator","index","Object","assign","label","formatValue","decimalInfo","getDecimalsForValue","formatFunc","valueFormats","decimals","scaledDecimals","link","scope","elem","attrs","ctrl","groupedBarChart","opts","margin","parseInt","showLegend","legendType","axesConfig","element","find","options","concat","keys","uniq","filter","key","avgList","stackVal","valores","k","name","i","o","scale","ordinal","range","category20","draw","select","html","svg","append","attr","style","top","createScales","addAxes","addTooltips","addBar","addLegend","y0","rangeRoundBands","y1","x","linear","x0","x1","y","axesScale","xAxis","axis","tickSize","orient","yAxis","domain","rangeBand","chartScale","domainCal","max","xAxisConfig","left","call","selectAll","yAxisConfig","bar","enter","barC","e","tips","elements","elementData","__data__","display","loc","defaultOptions","slice","reverse","onRender","Chart","bottom","right","templateUrl"],"mappings":"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","file":"ctrl.js","sourcesContent":["import {MetricsPanelCtrl} from 'app/plugins/sdk';\nimport _ from 'lodash';\nimport kbn from 'app/core/utils/kbn';\nimport TimeSeries from 'app/core/time_series';\nimport * as d3 from './external/d3.v3.min';\nimport './css/groupedBarChart.css!';\n\nconst panelDefaults = {\n    legend: {\n        show: true,\n        position: 'On graph',\n    },\n    chartType: 'stacked bar chart',\n    labelOrientation: 'horizontal',\n    orientation: 'vertical',\n    avgLineShow: true,\n    barValuesShow: true,\n    labelSpace: 40,\n    links: [],\n    datasource: null,\n    maxDataPoints: 3,\n    interval: null,\n    targets: [{}],\n    cacheTimeout: null,\n    nullPointMode: 'connected',\n    aliasColors: {},\n    format: 'short',\n    valueName: 'current',\n    strokeWidth: 1,\n    fontSize: '80%',\n    fontColor: '#fff',\n    width: 800,\n    height: 400,\n    colorSet: [],\n    colorSch: []\n};\n\nexport class GroupedBarChartCtrl extends MetricsPanelCtrl {\n\n    constructor($scope, $injector, $rootScope) {\n        super($scope, $injector);\n        this.$rootScope = $rootScope;\n        this.hiddenSeries = {};\n        this.data = null;\n\n        _.defaults(this.panel, panelDefaults);\n\n        this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n        this.events.on('data-received', this.onDataReceived.bind(this));\n        this.events.on('data-snapshot-load', this.onDataReceived.bind(this));\n        this.events.on('data-error', this.onDataError.bind(this));\n        this.events.on('span-changed', console.log)\n    }\n\n    onInitEditMode() {\n        this.addEditorTab('Options', 'public/plugins/grafana-groupedbarchart-panel/partials/editor.html', 2);\n        this.addEditorTab('Colors', 'public/plugins/grafana-groupedbarchart-panel/partials/colors.html', 3);\n    }\n\n    setUnitFormat(subItem) {\n        this.panel.format = subItem.value;\n        this.render();\n    }\n\n    onDataError() {\n        this.render();\n    }\n\n    updateColorSet() {\n        this.panel.colorSch = [];\n        this.panel.colorSet.forEach(d => this.panel.colorSch.push(d.color));\n        this.render();\n    }\n\n    onDataReceived(dataList) {\n        if (dataList && dataList.length) {\n            let columns = dataList[0].columns.map(({text}) => text)\n            this.data = dataList[0].rows.map((row) => columns.reduce(function (accumulator, value, index) { return Object.assign(accumulator, {[value]: row[index]}) }, {}))\n        } else {\n            this.data = [\n                {label:\"Machine001\", \"Off\":15, \"Down\":50, \"Run\": 0, \"Idle\":40},\n                {label:\"Machine002\", \"Off\":15, \"Down\":5, \"Run\":40, \"Idle\":15},\n                {label:\"Machine003\", \"Off\":15, \"Down\":30, \"Run\":40, \"Idle\":15},\n                {label:\"Machine004\", \"Off\":15, \"Down\":30, \"Run\":80, \"Idle\":15}\n            ];\n        }\n\n        this.render();\n    }\n\n    formatValue(value) {\n        let decimalInfo = this.getDecimalsForValue(value);\n        let formatFunc = kbn.valueFormats[this.panel.format];\n        if (formatFunc) {\n            return formatFunc(value, decimalInfo.decimals, decimalInfo.scaledDecimals);\n        }\n        return value;\n    }\n\n    link(scope, elem, attrs, ctrl) {\n        class groupedBarChart {\n            constructor(opts) {\n                this.data = opts.data;\n                this.margin = opts.margin;\n                this.width = parseInt(opts.width, 10);\n                this.height = parseInt(opts.height, 10);\n                this.showLegend = opts.legend;\n                this.legendType = opts.position;\n                this.chartType = opts.chartType;\n                this.orientation = opts.orientation;\n                this.labelSpace = opts.labelSpace;\n                this.fontColor = opts.fontColor;\n                this.labelOrientation = opts.labelOrientation;\n                this.avgLineShow = opts.avgLineShow;\n                this.barValuesShow = opts.barValuesShow;\n                this.axesConfig = [];\n                this.element = elem.find(opts.element)[0];\n                this.options = [];\n                this.data.forEach(d => {\n                    this.options = this.options.concat(d3.keys(d));\n                });\n                this.options = _.uniq(this.options.filter(key => key !== 'label'));\n                this.avgList = {};\n                this.options.forEach(d => {this.avgList[d] = 0});\n                this.options = this.options.filter(d => d!=='valores');\n                this.data.forEach(d => {\n                    let stackVal = 0;\n                    d.valores = this.options.filter(k => k in d).map((name, i, o) => {\n                        if (i !== 0) stackVal = stackVal + (+d[o[i-1]]);\n                        this.avgList[name] = this.avgList[name] + d[name];\n                        return {name: name, value: +d[name], stackVal: stackVal};\n                    });\n                });\n                this.options.forEach(d => {\n                    this.avgList[d] /= this.data.length;\n                });\n                if (opts.color.length == 0) {\n                    this.color = d3.scale.ordinal()\n                        .range(d3.scale.category20().range());\n                } else {\n                    this.color = d3.scale.ordinal()\n                        .range(opts.color);\n                }\n\n                this.draw();\n            }\n\n            draw() {\n                d3.select(this.element).html(\"\");\n                this.svg = d3.select(this.element).append('svg');\n                this.svg.attr('width', this.width)\n                    .attr('height', this.height)\n                    // .attr('viewBox', `0, 0, ${this.width}, ${this.height}`)\n                    .attr('preserveAspectRatio', 'xMinYMin meet')\n                    .style('padding', '10px')\n                    .attr('transform', `translate(0, ${this.margin.top})`);\n\n                this.createScales();\n                this.addAxes();\n                this.addTooltips();\n                this.addBar();\n                d3.select(this.element).attr('style', `width: ${this.width*1.5}px; height: ${this.height*1.5}px`);\n                if (this.showLegend) this.addLegend(this.legendType);\n            }\n\n            createScales() {\n                switch(this.orientation) {\n                    case 'horizontal':\n                        this.y0 = d3.scale.ordinal()\n                            .rangeRoundBands([+this.height, 0], .2, 0.5);\n\n                        this.y1 = d3.scale.ordinal();\n\n                        this.x = d3.scale.linear()\n                            .range([0, +this.width]);\n                        this.axesConfig = [this.x, this.y0, this.y0, this.y1, this.x];\n                        break;\n                    case 'vertical':\n                        this.x0 = d3.scale.ordinal()\n                            .rangeRoundBands([0, +this.width], .2, 0.5);\n\n                        this.x1 = d3.scale.ordinal();\n\n                        this.y = d3.scale.linear()\n                            .range([0, +this.height]);\n\n                        this.axesConfig = [this.x0, this.y, this.x0, this.x1, this.y];\n                        break;\n                }\n\n            }\n\n            addAxes() {\n                let axesScale = 1.1;\n                this.xAxis = d3.svg.axis()\n                    .scale(this.axesConfig[0])\n                    .tickSize(-this.height)\n                    .orient('bottom');\n\n                this.yAxis = d3.svg.axis()\n                    .scale(this.axesConfig[1])\n                    .orient('left');\n\n                this.axesConfig[2].domain(this.data.map(d => { return d.label; }));\n                this.axesConfig[3].domain(this.options).rangeRoundBands([0, this.axesConfig[2].rangeBand()]);\n\n                let chartScale = (this.chartType === 'bar chart') ? 0 : 1;\n                let domainCal = (this.orientation === 'horizontal')\n                    ? [0, d3.max(this.data, function(d) { return d3.max(d.valores, d => { return (d.value + chartScale*d.stackVal)*axesScale; }); })]\n                    : [d3.max(this.data, function(d) { return d3.max(d.valores, d => { return (d.value + chartScale*d.stackVal)*axesScale; }); }), 0];\n                this.axesConfig[4].domain(domainCal);\n\n                let xAxisConfig = this.svg.append('g')\n                    .attr('class', 'x axis')\n                    .attr('transform', `translate(${this.margin.left}, ${this.height + this.margin.top})`)\n                    .call(this.xAxis)\n                    .selectAll('text')\n                    .style('fill', `${this.fontColor}`)\n\n                switch(this.labelOrientation) {\n                    case 'horizontal':\n                        break;\n                    case '45 degrees':\n                        xAxisConfig.style('text-anchor', 'end')\n                            .style('transform', 'rotate(-45deg)');\n                        break;\n                    case 'vertical':\n                        xAxisConfig.style('text-anchor', 'end')\n                            .style('transform', 'rotate(-90deg)');\n                        break;\n                }\n\n                let yAxisConfig = this.svg.append('g')\n                    .attr('class', 'y axis')\n                    .attr('transform', `translate(${this.margin.left}, ${this.margin.top})`)\n                    .style('fill', `${this.fontColor}`)\n                    .call(this.yAxis)\n\n                yAxisConfig.selectAll('text')\n                    .style('fill', `${this.fontColor}`);\n                yAxisConfig.selectAll('path')\n                    .style('stroke', `${this.fontColor}`);\n\n            }\n\n            addBar() {\n                let scale = (this.chartType === 'bar chart') ? 1 : this.options.length;\n                switch(this.orientation) {\n                    case 'horizontal':\n                        this.avgLineShow && this.options.forEach(d => {\n                            this.svg.append('line')\n                                .attr('x1', this.x(this.avgList[d]))\n                                .attr('y1', this.height)\n                                .attr('x2', this.x(this.avgList[d]))\n                                .attr('y2', 0)\n                                .attr('class', `${d} avgLine`)\n                                .attr('transform', `translate(${this.margin.left}, ${this.margin.top})`)\n                                .style('display', 'none')\n                                .style('stroke-width', 2)\n                                .style('stroke', this.color(d))\n                                .style('stroke-opacity', 0.7);\n                        });\n\n                        this.bar = this.svg.selectAll('.bar')\n                            .data(this.data)\n                            .enter().append('g')\n                            .attr('class', 'rect')\n                            .attr('transform', d => {\n                                return `translate(${this.margin.left}, ${this.y0(d.label) + this.margin.top})`;\n                            });\n\n                        this.barC = this.bar.selectAll('rect')\n                            .data(d => { return d.valores; })\n                            .enter();\n\n\n                        this.barC.append('rect')\n                            .attr('height', this.y1.rangeBand()*scale)\n                            .attr('y', d => {\n                                return (this.chartType === 'bar chart') ? this.y1(d.name) : this.y0(d.label);\n                            })\n                            .attr('x', d => {\n                                return (this.chartType === 'bar chart') ? 0 : this.x(d.stackVal);\n                            })\n                            .attr('value', d => { return d.name;})\n                            .attr('width', (d) => { return this.x(d.value);})\n                            .style('fill', d => { return this.color(d.name);});\n\n                        break;\n                    case 'vertical':\n                        this.avgLineShow && this.options.forEach(d => {\n                            this.svg.append('line')\n                                .attr('x1', 0)\n                                .attr('y1', this.y(this.avgList[d]))\n                                .attr('x2', +this.width)\n                                .attr('y2', this.y(this.avgList[d]))\n                                .attr('class', `${d} avgLine`)\n                                .attr('transform', `translate(${this.margin.left}, ${this.margin.top})`)\n                                .style('display', 'none')\n                                .style('stroke-width', 2)\n                                .style('stroke', this.color(d))\n                                .style('stroke-opacity', 0.7)\n                        });\n\n                        this.bar = this.svg.selectAll('.bar')\n                            .data(this.data)\n                            .enter().append('g')\n                            .attr('class', 'rect')\n                            .attr('transform', (d, i) => {\n                                return `translate(${this.x0(d.label)}, ${+this.height + this.margin.top})`;\n                            });\n\n                        this.barC = this.bar.selectAll('rect')\n                            .data(d => { return d.valores.map(e => { e.label = d.label; return e;}); })\n                            .enter();\n\n                        this.barC.append('rect')\n                            .attr('id', (d, i) => { return `${d.label}_${i}`;})\n                            .attr('height', d => { return +this.height - this.y(d.value);})\n                            .attr('y', d => {\n                                return (this.chartType === 'bar chart') ? this.y(d.value) - this.height :  (this.y(d.value) - 2*(+this.height) + this.y(d.stackVal));\n                            })\n                            .attr('x', (d, i) => {\n                                return (this.chartType === 'bar chart') ? this.x1(d.name) + this.margin.left : this.x1(d.name) - this.x1.rangeBand()*i + this.margin.left;\n                            })\n                            .attr('value', d => { return d.name;})\n                            .attr('width', this.x1.rangeBand()*scale)\n                            .style('fill', d => { return this.color(d.name);});\n\n                        break;\n                }\n\n                if(this.barValuesShow) {\n                    (this.chartType === 'bar chart') && this.barC.append('text')\n                        .attr('x', d => {\n                            return (this.orientation === 'horizontal')\n                            ? this.x(d.value) +5\n                            : this.x1(d.name) + this.x1.rangeBand()/4 + this.margin.left;\n                        })\n                        .attr('y', d => {\n                            return (this.orientation === 'horizontal')\n                            ? this.y1(d.name) +(this.y1.rangeBand()/2)\n                            : this.y(d.value) - this.height -8;\n                        })\n                        .attr('dy', '.35em')\n                        .style('fill', `${this.fontColor}`)\n                        .text(d => { return d.value ? d.value : ''; });\n                }\n\n                this.bar.on('mouseover', d => {\n                    this.tips.style('left', `${10}px`);\n                    this.tips.style('top', `${15}px`);\n                    this.tips.style('display', \"inline-block\");\n                    let elements = d3.selectAll(':hover')[0];\n                    let elementData = elements[elements.length-1].__data__;\n                    this.tips.html(`${d.label} , ${elementData.name} ,  ${elementData.value}`);\n                    if (this.avgLineShow) d3.selectAll(`.${elementData.name}`)[0][0].style.display = '';\n                });\n\n                this.bar.on('mouseout', d => {\n                    this.tips.style('display', \"none\");\n                    d3.selectAll('.avgLine')[0].forEach(d => {\n                       d.style.display = 'none';\n                    });\n                });\n            }\n\n            addLegend(loc) {\n                let labelSpace = this.labelSpace;\n                switch(loc) {\n                    case 'On graph':\n                        let defaultOptions = (this.chartType == 'bar chart' || this.orientation == 'horizontal') ? this.options.slice(): this.options.slice().reverse();\n                        this.legend = this.svg.selectAll('.legend')\n                            .data(defaultOptions)\n                            .enter().append('g')\n                            .attr('class', 'legend')\n                            .attr('transform', (d, i) => { return `translate(50,${i*20 + this.margin.top})`; });\n\n                        this.legend.append('rect')\n                            .attr('x', this.width*1.1 - 18)\n                            .attr('width', 18)\n                            .attr('height', 18)\n                            .style('fill', this.color);\n\n                        this.legend.append('text')\n                            .attr('x', this.width*1.1 - 24)\n                            .attr('y', 9)\n                            .attr('dy', '.35em')\n                            .style('text-anchor', 'end')\n                            .style('fill', `${this.fontColor}`)\n                            .text(d => { return d; });\n                        break;\n                    case 'Under graph':\n                        this.legend = this.svg.selectAll('.legend')\n                            .data(this.options.slice())\n                            .enter().append('g')\n                            .attr('class', 'legend')\n                            .attr('transform', (d, i) => { return `translate(${+i*labelSpace - this.width},${+this.height + 24 + this.margin.top})`; });\n\n                        this.legend.append('rect')\n                            .attr('x', (d, i) => { return (i*labelSpace + this.margin.left + this.width*1 +0);})\n                            .attr('width', 18)\n                            .attr('height', 18)\n                            .style('fill', this.color);\n\n                        this.legend.append('text')\n                            .attr('x', (d, i) => { return (i*labelSpace + this.margin.left + this.width*1) +5; })\n                            .attr('dx', 18)\n                            .attr('dy', '1.1em')\n                            .style('text-anchor', 'start')\n                            .style('fill', `${this.fontColor}`)\n                            .text(d => { return d; });\n                        break;\n                    default:\n                        break;\n                }\n            }\n\n            addTooltips() {\n                this.tips = d3.select(this.element).append('div')\n                    .attr('class', 'toolTip');\n            }\n        }\n\n        function onRender() {\n            if(!ctrl.data) return;\n            var Chart = new groupedBarChart({\n                data: ctrl.data,\n                margin: {top: 30, left: 80, bottom: 10, right: 10},\n                element: '#chart',\n                width: ctrl.panel.width,\n                height: ctrl.panel.height,\n                legend: ctrl.panel.legend.show,\n                fontColor: ctrl.panel.fontColor,\n                position: ctrl.panel.legend.position,\n                chartType: ctrl.panel.chartType,\n                orientation: ctrl.panel.orientation,\n                labelOrientation: ctrl.panel.labelOrientation,\n                labelSpace: ctrl.panel.labelSpace,\n                avgLineShow: ctrl.panel.avgLineShow,\n                barValuesShow: ctrl.panel.barValuesShow,\n                color: ctrl.panel.colorSch\n            });\n\n            ctrl.panel.colorSet = [];\n            Chart.options.forEach(d => {\n                ctrl.panel.colorSet.push({text: d, color: Chart.color(d)});\n            });\n        }\n\n        this.events.on('render', function() {\n            onRender();\n        });\n    }\n}\n\nGroupedBarChartCtrl.templateUrl = 'partials/module.html';\n"]}